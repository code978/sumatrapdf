diff -rPu5 jbig2dec.orig\jbig2.c jbig2dec\jbig2.c
--- jbig2dec.orig\jbig2.c	Tue Sep 03 07:53:07 2013
+++ jbig2dec\jbig2.c	Mon Dec 23 11:14:52 2013
@@ -58,15 +58,13 @@
 
 void *
 jbig2_alloc (Jbig2Allocator *allocator, size_t size, size_t num)
 {
   /* check for integer multiplication overflow */
-  int64_t check = ((int64_t)num)*((int64_t)size);
-  if (check != (int)check)
+  if (num > 0 && size >= (size_t)-0x100 / num)
     return NULL;
-  else
-    return allocator->alloc (allocator, (int)check);
+  return allocator->alloc(allocator, size * num);
 }
 
 void
 jbig2_free (Jbig2Allocator *allocator, void *p)
 {
@@ -75,15 +73,13 @@
 
 void *
 jbig2_realloc (Jbig2Allocator *allocator, void *p, size_t size, size_t num)
 {
   /* check for integer multiplication overflow */
-  int64_t check = ((int64_t)num)*((int64_t)size);
-  if (check != (int)check)
+  if (num > 0 && size >= (size_t)-0x100 / num)
     return NULL;
-  else
-    return allocator->realloc (allocator, p, (int)check);
+  return allocator->realloc(allocator, p, size * num);
 }
 
 static int
 jbig2_default_error(void *data, const char *msg,
                     Jbig2Severity severity, int32_t seg_idx)
diff -rPu5 jbig2dec.orig\jbig2_symbol_dict.c jbig2dec\jbig2_symbol_dict.c
--- jbig2dec.orig\jbig2_symbol_dict.c	Wed Dec 18 13:48:36 2013
+++ jbig2dec\jbig2_symbol_dict.c	Fri Jan 10 22:25:21 2014
@@ -184,10 +184,11 @@
     }
 
     for (index = 0; index < segment->referred_to_segment_count; index++) {
         rsegment = jbig2_find_segment(ctx, segment->referred_to_segments[index]);
         if (rsegment && ((rsegment->flags & 63) == 0) && rsegment->result &&
+            (((Jbig2SymbolDict *)rsegment->result)->n_symbols > 0) &&
             ((*((Jbig2SymbolDict *)rsegment->result)->glyphs) != NULL)) {
             /* add this referred to symbol dictionary */
             dicts[dindex++] = (Jbig2SymbolDict *)rsegment->result;
         }
     }
