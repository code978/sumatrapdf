diff -rPu5 jbig2dec.orig\jbig2.h jbig2dec\jbig2.h
--- jbig2dec.orig\jbig2.h	Fri Jun 15 13:36:58 2012
+++ jbig2dec\jbig2.h	Thu Jul 05 15:18:19 2012
@@ -27,16 +27,19 @@
 
 /* To enable Memento, either uncomment the following, or arrange to
  * predefine MEMENTO whilst building. */
 /* #define MEMENTO */
 
+/* SumatraPDF: allow to build without MEMENTO (clashes with MuPDF's) */
+#ifdef MEMENTO
 /* If we are building as part of GS then make sure we use the version
  * of MEMENTO that is part of gs (in case of version skew) */
 #ifdef GSBUILD
 #include "../base/memento.h"
 #else
 #include "memento.h"
+#endif
 #endif
 
 /* warning levels */
 typedef enum {
   JBIG2_SEVERITY_DEBUG,
diff -rPu5 jbig2dec.orig\jbig2_huffman.c jbig2dec\jbig2_huffman.c
--- jbig2dec.orig\jbig2_huffman.c	Fri Jun 15 13:36:58 2012
+++ jbig2dec\jbig2_huffman.c	Sat Aug 18 19:20:14 2012
@@ -253,11 +253,12 @@
   for (;;)
     {
       int log_table_size = table->log_table_size;
       int PREFLEN;
 
-      entry = &table->entries[this_word >> (32 - log_table_size)];
+      /* SumatraPDF: shifting by the size of the operand is undefined */
+      entry = &table->entries[log_table_size > 0 ? this_word >> (32 - log_table_size) : 0];
       flags = entry->flags;
       PREFLEN = entry->PREFLEN;
       if ((flags == (byte)-1) && (PREFLEN == (byte)-1) && (entry->u.RANGELOW == -1))
       {
           if (oob)
diff -rPu5 jbig2dec.orig\jbig2_symbol_dict.c jbig2dec\jbig2_symbol_dict.c
--- jbig2dec.orig\jbig2_symbol_dict.c	Fri Aug 10 22:44:08 2012
+++ jbig2dec\jbig2_symbol_dict.c	Fri Aug 10 22:45:55 2012
@@ -289,11 +289,11 @@
               "failed to allocate storage for symbol bitmap");
           goto cleanup1;
       }
       if (params->SDREFAGG) {
           int64_t tmp = params->SDNUMINSYMS + params->SDNUMNEWSYMS;
-          for (SBSYMCODELEN = 0; (1 << SBSYMCODELEN) < tmp; SBSYMCODELEN++);
+          for (SBSYMCODELEN = 0; (int64_t)(1 << SBSYMCODELEN) < tmp; SBSYMCODELEN++);
           IAID = jbig2_arith_iaid_ctx_new(ctx, SBSYMCODELEN);
           IARDX = jbig2_arith_int_ctx_new(ctx);
           IARDY = jbig2_arith_int_ctx_new(ctx);
           if ((IAID == NULL) || (IARDX == NULL) || (IARDY == NULL))
           {
