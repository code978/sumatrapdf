# nmake -f makefile.msvc
# Arguments:
# CFG=dbg|rel (default: dbg)
# EXTLIBSDIR=<directory where zlib/freetype/jpeg lib live in ext dir> (default: empty)
#  e.g. ..\sumatrapdf\
# EXB=rm (default: no setting) This is an EXternal Build, i.e. not base SumatraPDF.
# EXTCFLAGS=$CFLAGS
# FITZ_DIR=mupdf

# Set default configuration
!if "$(CFG)"==""
CFG=dbg
!endif

# O is directory where object and binary files go
!if "$(EXB)"=="rm"
O = obj-rm-$(CFG)
!else
O = obj-$(CFG)
!endif

!if "$(FITZ_DIR)"==""
FITZ_DIR=mupdf
!endif

SUMATRA_APP = $(O)\SumatraPDF.exe

# default target only builds SumatraPDF.exe
SumatraPDF: $(O) $(SUMATRA_APP)

##### add configuration changes that should also affect MuPDF before this line #####

!INCLUDE $(FITZ_DIR)\makefile.msvc

##### add configuration changes that should NOT affect MuPDF after this line #####

# external build settings not part of core SumatraPDF
!if "$(EXB)"=="rm"
CFLAGS = $(CFLAGS) /D "BUILD_RM_VERSION"
!endif

SUMATRA_CFLAGS = $(CFLAGS) /Ibaseutils /Ibaseutils/msvc \
	/I$(FITZ_DIR)\fitz /I$(FITZ_DIR)\mupdf \
	/I$(ZLIB_DIR) /Isrc /IDialogSizer 

SUMATRA_CFLAGS = $(SUMATRA_CFLAGS) /D "_WINDOWS"
SUMATRA_CFLAGS = $(SUMATRA_CFLAGS) $(EXTCFLAGS)
# Flag for TeX enhancements
SUMATRA_CFLAGS = $(SUMATRA_CFLAGS) /D "SYNCTEX_FEATURE"
!if "$(TEXBUILD)"=="1"
SUMATRA_CFLAGS = $(SUMATRA_CFLAGS) /D "_TEX_ENHANCEMENT" /D "SUMATRA_UPDATE_INFO_URL=_T(\"http://william.famille-blum.org/software/sumatra/sumpdftex-latest.txt\")" /D "SVN_UPDATE_LINK=_T(\"http://william.famille-blum.org/software/sumatra/\")" /D "CURR_VERSION=\"$(VERSION)\""
!endif

# Make it easy to compile as ANSI or UNICODE application
!if "$(_ANSI)"==""
FITZ_CFLAGS = $(FITZ_CFLAGS) /D "UNICODE" /D "_UNICODE"
SUMATRA_CFLAGS = $(SUMATRA_CFLAGS) /D "UNICODE" /D "_UNICODE"
!endif

LIBS = $(LIBS) comctl32.lib Msimg32.lib Winspool.lib wininet.lib ole32.lib shlwapi.lib version.lib

!if "$(CFG)"=="dbg"
SUMATRA_CFLAGS = $(SUMATRA_CFLAGS) /D "DEBUG" /D "_DEBUG"
!endif

!if "$(CFG)"=="rel" && "$(EXB)"=="rm"
SUMATRA_CFLAGS = $(SUMATRA_CFLAGS) /GL /MT /O2
!endif

SUMATRA_RES = $(O)\sumtrapdf.res
SUMATRA_MANIFEST = $(O)\sumtrapdf.manifest.res

BASEUTILS_OBJS = \
	$(O)\base_util.obj $(O)\benc_util.obj $(O)\file_util.obj $(O)\geom_util.obj \
	$(O)\str_util.obj $(O)\strlist_util.obj $(O)\win_util.obj $(O)\WinUtil.obj $(O)\wstr_util.obj \
	$(O)\dialogsizer_set.obj

SUMATRA_OBJS = \
	$(O)\AppPrefs.obj $(O)\DisplayModel.obj $(O)\DisplayState.obj $(O)\Http.obj \
	$(O)\CrashHandler.obj $(O)\MemSegment.obj $(O)\FileHistory.obj $(O)\PdfEngine.obj \
	$(O)\PdfSearch.obj $(O)\SumatraAbout.obj $(O)\SumatraDialogs.obj $(O)\SumatraProperties.obj \
	$(O)\SumatraPDF.obj $(O)\translations.obj $(O)\translations_txt.obj $(O)\LangMenuDef.obj \
	$(O)\FileWatch.obj $(O)\PdfSync.obj $(O)\synctex_parser.obj $(O)\synctex_parser_utils.obj \
    $(SUMATRA_RES)

SUMATRA_HEADERS = \
	src\AppPrefs.h src\CrashHandler.h src\DisplayModel.h src\DisplayState.h \
	src\FileHistory.h src\FileWatch.h src\Http.h src\MemSegment.h src\PdfEngine.h \
	src\PdfSearch.h src\PdfSync.h src\Resource.h src\SumatraDialogs.h src\SumatraPDF.h \
	src\synctex_parser.h src\synctex_parser_utils.h src\translations.h src\Version.h
# src\LangMenuDef.h src\translations_txt.h

# Don't include a manifest in Debug builds (it could override the external manifest)
!if "$(CFG)"=="rel"
SUMATRA_OBJS = $(SUMATRA_OBJS) $(SUMATRA_MANIFEST)
!endif

SUMATRA_PDB = $(O)\SumatraPDF.pdb
SUMATRA_MAP = $(O)\SumatraPDF.map

##### SumatraPDF-specific build rules #####

rebuild: clean SumatraPDF

cleanmupdf: force
	-del $(FITZ_DRAW_OBJS) $(FITZ_OBJS) $(MUPDF_OBJS) $(FONT_OBJS) $(CMAP_OBJS)

## Note: the following command does not work on Windows
cleanall: force
	-rmdir /S /Q obj-*

$(SUMATRA_RES): src\SumatraPDF.rc
	rc /r /fo$(SUMATRA_RES) src\SumatraPDF.rc

$(SUMATRA_MANIFEST): src\SumatraPDF.manifest.rc
	rc /r /fo$(SUMATRA_MANIFEST) src\SumatraPDF.manifest.rc

$(SUMATRA_APP): $(LIBS_OBJS) $(BASEUTILS_OBJS) $(SUMATRA_OBJS)
	$(LD) $(LDFLAGS) /OUT:$(SUMATRA_APP) /PDB:$(SUMATRA_PDB) \
	$(LIBS_OBJS) $(BASEUTILS_OBJS) $(SUMATRA_OBJS) $(LIBS) \
	/MAP:$(SUMATRA_MAP)

# TODO: don't rebuild src\* when an unrelated header changes
$(SUMATRA_OBJS): $(SUMATRA_HEADERS)

# sumatra directories
{baseutils\}.c{$(O)}.obj::
	$(CC) $(SUMATRA_CFLAGS) /Fo$(O)\ /Fd$(O)\vc80.pdb  $<

{baseutils\}.cpp{$(O)}.obj::
	$(CC) $(SUMATRA_CFLAGS) /Fo$(O)\ /Fd$(O)\vc80.pdb  $<

{DialogSizer\}.cpp{$(O)}.obj::
	$(CC) $(SUMATRA_CFLAGS) /Fo$(O)\ /Fd$(O)\vc80.pdb  $<

{src\}.cc{$(O)}.obj::
	$(CC) $(SUMATRA_CFLAGS) /Fo$(O)\ /Fd$(O)\vc80.pdb  $<

{src\}.cpp{$(O)}.obj::
	$(CC) $(SUMATRA_CFLAGS) /Fo$(O)\ /Fd$(O)\vc80.pdb  $<

{src\}.c{$(O)}.obj::
	$(CC) $(SUMATRA_CFLAGS) /Fo$(O)\ /Fd$(O)\vc80.pdb  $<
