# nmake -f makefile.msvc
# Arguments:
# CFG=dbg|rel (default: dbg)
# EXTLIBSDIR=<directory where zlib/freetype/jpeg lib live> (default: ext)
#  e.g. ..\sumatrapdf\ext
# EXB=rm (default: no setting) This is an EXternal Build, i.e. not base SumatraPDF.
# EXTCFLAGS=$CFLAGS
# MUPDF_DIR=mupdf

# Set default configuration
!if "$(CFG)"==""
CFG=dbg
!endif

# O is directory where object and binary files go
!if "$(EXB)"=="rm"
O = obj-rm-$(CFG)
!else
O = obj-$(CFG)
!endif

!if "$(MUPDF_DIR)"==""
MUPDF_DIR=mupdf
!endif

!if "$(EXTLIBSDIR)"==""
EXTLIBSDIR=ext
!endif

SUMATRA_APP = $(O)\SumatraPDF.exe
INSTALLER_APP = $(O)\Installer.exe

# default target
SumatraPDF: $(O) $(SUMATRA_APP) $(INSTALLER_APP)

##### add configuration changes that should also affect MuPDF before this line #####

!INCLUDE $(MUPDF_DIR)\makefile.msvc

##### add configuration changes that should NOT affect MuPDF after this line #####

# external build settings not part of core SumatraPDF
!if "$(EXB)"=="rm"
CFLAGS = $(CFLAGS) /D "BUILD_RM_VERSION"
!endif

# Modify the following defines if you have to target a platform prior to the ones specified below.
# Their meaning: http://msdn.microsoft.com/en-us/library/aa383745(VS.85).aspx
# and http://blogs.msdn.com/oldnewthing/archive/2007/04/11/2079137.aspx
# We set the features uniformly to Win 2000 or later.
WINVER_DEFS =  /D "WINVER=0x0500" /D "_WIN32_WINNT=0x0500"

# /D "_WIN32_WINDOWS=0x0500" /D "_WIN32_IE=0x0600"

SUMATRA_CFLAGS = $(CFLAGS) $(EXTCFLAGS) $(WINVER_DEFS) \
	/Ibaseutils /Ibaseutils/msvc /I$(MUPDF_DIR)\fitz /I$(MUPDF_DIR)\mupdf \
	/I$(ZLIB_DIR) /Isrc /IDialogSizer 

INSTALLER_CFLAGS = $(CFLAGS) $(EXTCFLAGS) $(WINVER_DEFS) \
	/Ibaseutils /Ibaseutils/msvc /Isrc/installer /I$(ZLIB_DIR)

# Flag for TeX enhancements
SUMATRA_CFLAGS = $(SUMATRA_CFLAGS) /D "SYNCTEX_FEATURE"
!if "$(TEXBUILD)"=="1"
SUMATRA_CFLAGS = $(SUMATRA_CFLAGS) /D "_TEX_ENHANCEMENT" /D "SUMATRA_UPDATE_INFO_URL=_T(\"http://william.famille-blum.org/software/sumatra/sumpdftex-latest.txt\")" /D "SVN_UPDATE_LINK=_T(\"http://william.famille-blum.org/software/sumatra/\")" /D "CURR_VERSION=$(VERSION)"
!endif

# Make it easy to compile as ANSI or UNICODE application
!if "$(_ANSI)"==""
FITZ_CFLAGS = $(FITZ_CFLAGS) /D "UNICODE" /D "_UNICODE"
SUMATRA_CFLAGS = $(SUMATRA_CFLAGS) /D "UNICODE" /D "_UNICODE"
INSTALLER_CFLAGS = $(INSTALLER_CFLAGS) /D "UNICODE" /D "_UNICODE"
!endif

LIBS = $(LIBS) comctl32.lib Msimg32.lib Winspool.lib wininet.lib ole32.lib shlwapi.lib version.lib

LIBS_INSTALLER = $(LIBS) psapi.lib

!if "$(CFG)"=="dbg"
SUMATRA_CFLAGS = $(SUMATRA_CFLAGS) /D "DEBUG" /D "_DEBUG"
INSTALLER_CFLAGS = $(INSTALLER_CFLAGS) /D "DEBUG" /D "_DEBUG"
!endif

!if "$(CFG)"=="rel" && "$(EXB)"=="rm"
SUMATRA_CFLAGS   = $(SUMATRA_CFLAGS) /GL /MT /O2
INSTALLER_CFLAGS = $(INSTALLER_CFLAGS) /GL /MT /O2
!endif

SUMATRA_RES = $(O)\sumatrapdf.res
SUMATRA_MANIFEST = $(O)\sumatrapdf.manifest.res

INSTALLER_RES = $(O)\Installer.res
INSTALLER_MANIFEST = $(O)\Installer.manifest.res

BASEUTILS_OBJS = \
	$(O)\base_util.obj $(O)\benc_util.obj $(O)\file_util.obj $(O)\geom_util.obj \
	$(O)\str_util.obj $(O)\win_util.obj $(O)\WinUtil.obj $(O)\wstr_util.obj \
	$(O)\dialogsizer_set.obj

SUMATRA_OBJS = \
	$(O)\AppPrefs.obj $(O)\DisplayModel.obj $(O)\DisplayState.obj $(O)\Http.obj \
	$(O)\CrashHandler.obj $(O)\MemSegment.obj $(O)\FileHistory.obj $(O)\PdfEngine.obj \
	$(O)\PdfSearch.obj $(O)\SumatraAbout.obj $(O)\SumatraDialogs.obj $(O)\SumatraProperties.obj \
	$(O)\SumatraPDF.obj $(O)\translations.obj $(O)\translations_txt.obj $(O)\LangMenuDef.obj \
	$(O)\FileWatch.obj $(O)\PdfSync.obj $(O)\synctex_parser.obj $(O)\synctex_parser_utils.obj \
	$(O)\RenderCache.obj $(O)\PdfSelection.obj $(O)\WindowInfo.obj $(O)\ParseCommandLine.obj \
	$(SUMATRA_RES)

INSTALLER_OBJS = \
  $(BASEUTILS_OBJS) $(O)\Installer.obj $(INSTALLER_RES)

# Don't embed a manifest into binary in Debug builds. That disables external manifest
# (i.e. the .manifest file) generated by a linker. Unfortunately that manifest includes
# necessary incantations to load debug msvcrt dll which I'm not sure I can hard-code
# (since it might depend on the compiler used).
# TODO: figured out how to create proper embedded manifest for debug builds as well 
!if "$(CFG)"=="rel"
SUMATRA_OBJS = $(SUMATRA_OBJS) $(SUMATRA_MANIFEST)
INSTALLER_OBJS = $(INSTALLER_OBJS) $(INSTALLER_MANIFEST)
!endif

##### SumatraPDF-specific build rules #####

rebuild: clean SumatraPDF

cleanmupdf: force
	-del $(FITZ_DRAW_OBJS) $(FITZ_OBJS) $(MUPDF_OBJS) $(FONT_OBJS) $(CMAP_OBJS)

## Note: the following command does not work on Windows
cleanall: force
	-rmdir /S /Q obj-*

$(SUMATRA_RES): src\SumatraPDF.rc src\Resource.h src\Version.h
	rc /r /fo$(SUMATRA_RES) $(EXTCFLAGS) src\SumatraPDF.rc

$(SUMATRA_MANIFEST): src\SumatraPDF.manifest.rc
	rc /r /fo$(SUMATRA_MANIFEST) src\SumatraPDF.manifest.rc

$(SUMATRA_APP): $(LIBS_OBJS) $(BASEUTILS_OBJS) $(SUMATRA_OBJS) $(O)\UnitTests.obj
	$(LD) $(LDFLAGS) $** $(LIBS) /PDB:$*.pdb /OUT:$@ 

$(INSTALLER_RES): src\installer\Installer.rc src\installer\Resource.h
	rc /r /fo$(INSTALLER_RES) $(EXTCFLAGS) src\installer\Installer.rc

$(INSTALLER_MANIFEST): src\installer\Installer.manifest.rc
	rc /r /fo$@ src\installer\Installer.manifest.rc

$(INSTALLER_APP): $(ZLIB_OBJS) $(INSTALLER_OBJS) 
	$(LD) $(LDFLAGS) $** $(LIBS_INSTALLER) /PDB:$*.pdb /OUT:$@

# sumatra directories
{baseutils}.c{$(O)}.obj::
	$(CC) /TC $(SUMATRA_CFLAGS) /Fo$(O)\ /Fd$(O)\vc80.pdb  $<

{baseutils}.cpp{$(O)}.obj::
	$(CC) $(SUMATRA_CFLAGS) /Fo$(O)\ /Fd$(O)\vc80.pdb  $<

{DialogSizer}.cpp{$(O)}.obj::
	$(CC) $(SUMATRA_CFLAGS) /Fo$(O)\ /Fd$(O)\vc80.pdb  $<

{src}.cc{$(O)}.obj::
	$(CC) $(SUMATRA_CFLAGS) /Fo$(O)\ /Fd$(O)\vc80.pdb  $<

{src}.cpp{$(O)}.obj::
	$(CC) $(SUMATRA_CFLAGS) /Fo$(O)\ /Fd$(O)\vc80.pdb  $<

{src}.c{$(O)}.obj::
	$(CC) /TC $(SUMATRA_CFLAGS) /Fo$(O)\ /Fd$(O)\vc80.pdb  $<

# Installer directories
{src\installer}.cpp{$(O)}.obj::
	$(CC) $(INSTALLER_CFLAGS) /Fo$(O)\ /Fd$(O)\vc80.pdb  $<

## Header-dependencies for src\*
# TODO: keep these lists up-to-date automatically

BASEUTILS_H =  baseutils\base_util.h baseutils\tstr_util.h baseutils\str_util.h baseutils\wstr_util.h \
               baseutils\geom_util.h
APPPREFS_H =   src\AppPrefs.h src\DisplayState.h
PDFENGINE_H =  $(BASEUTILS_H) src\PdfEngine.h $(MUPDF_DIR)\fitz\fitz.h $(MUPDF_DIR)\mupdf\mupdf.h
DISPLAYMODEL_H=$(PDFENGINE_H) src\DisplayModel.h src\PdfSearch.h src\DisplayState.h src\PdfSelection.h \
               baseutils\vstrlist.h
SUMATRAPDF_H = $(BASEUTILS_H) src\SumatraPDF.h baseutils\win_util.h src\Resource.h
WINDOWINFO_H = $(PDFENGINE_H) $(DISPLAYMODEL_H) src\WindowInfo.h src\FileWatch.h src\PdfSync.h

$(O)\AppPrefs.obj:     $(BASEUTILS_H) $(APPPREFS_H) baseutils\benc_util.h baseutils\file_util.h \
                       src\FileHistory.h
$(O)\CrashHandler.obj: $(BASEUTILS_H) baseutils\WinUtil.hpp
$(O)\DisplayModel.obj: $(SUMATRAPDF_H) $(WINDOWINFO_H)
$(O)\DisplayState.obj: $(BASEUTILS_H)
$(O)\FileHistory.obj:  baseutils\tstr_util.h src\DisplayState.h
$(O)\FileWatch.obj:    $(SUMATRAPDF_H) baseutils\file_util.h
$(O)\Http.obj:         $(SUMATRAPDF_H) src\MemSegment.h baseutils\vstrlist.h src\Version.h
$(O)\LangMenuDef.obj:  src\Resource.h
$(O)\MemSegment.obj:   baseutils\vstrlist.h
$(O)\ParseCommandLine.obj: $(SUMATRAPDF_H) baseutils\vstrlist.h baseutils\WinUtil.hpp
$(O)\PdfEngine.obj:    $(PDFENGINE_H)
$(O)\PdfSearch.obj:    $(PDFENGINE_H) src\PdfSelection.h
$(O)\PdfSelection.obj: $(PDFENGINE_H)
$(O)\PdfSync.obj:      $(SUMATRAPDF_H) $(WINDOWINFO_H)
$(O)\RenderCache.obj:  $(DISPLAYMODEL_H)
$(O)\SumatraAbout.obj: $(SUMATRAPDF_H) $(APPPREFS_H) $(WINDOWINFO_H) src\translations.h src\Version.h
$(O)\SumatraDialogs.obj: $(SUMATRAPDF_H) $(APPPREFS_H) $(WINDOWINFO_H) src\LangMenuDef.h src\translations.h
$(O)\SumatraPDF.obj:   $(SUMATRAPDF_H) $(APPPREFS_H) $(WINDOWINFO_H) src\FileHistory.h \
                       src\Http.h src\RenderCache.h baseutils\WinUtil.hpp \
                       src\SumatraDialogs.h src\SumatraProperties.h src\SumatraAbout.h \
                       src\translations.h src\Version.h src\CrashHandler.h src\ParseCommandLine.h
$(O)\SumatraProperties.obj: $(SUMATRAPDF_H) $(APPPREFS_H) $(WINDOWINFO_H) src\translations.h
$(O)\translations.obj: $(BASEUTILS_H)
$(O)\WindowInfo.obj:   $(WINDOWINFO_H) baseutils\win_util.h baseutils\file_util.h

# all objs depend on the equally named header
$(SUMATRA_OBJS): src\$$(@B).h
