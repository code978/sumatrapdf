// DON'T EDIT MANUALLY !!!!
// auto-generated by gen_txt.py !!!!

#include "BaseUtil.h"
#include "SerializeTxt.h"
#include "MuiButtonVectorDef.h"

using namespace sertxt;

#define of offsetof
const FieldMetadata gButtonVectorDefFieldMetadata[] = {
    { of(ButtonVectorDef, name),           TYPE_STR, NULL },
    { of(ButtonVectorDef, path),           TYPE_STR, NULL },
    { of(ButtonVectorDef, styleDefault),   TYPE_STR, NULL },
    { of(ButtonVectorDef, styleMouseOver), TYPE_STR, NULL },
};

const StructMetadata gButtonVectorDefMetadata = {
    sizeof(ButtonVectorDef),
    4,
    "name\0path\0style_default\0style_mouse_over\0\0",
    &gButtonVectorDefFieldMetadata[0]
};

#undef of

ButtonVectorDef *DeserializeButtonVectorDef(const char *data, size_t dataLen)
{
    return DeserializeButtonVectorDefWithDefault(data, dataLen, NULL, 0);
}

ButtonVectorDef *DeserializeButtonVectorDefWithDefault(const char *data, size_t dataLen, const char *defaultData, size_t defaultDataLen)
{
    char *dataCopy = str::DupN(data, dataLen);
    char *defaultDataCopy = str::DupN(defaultData, defaultDataLen);
    void *res = DeserializeWithDefault(dataCopy, dataLen, defaultDataCopy, defaultDataLen, &gButtonVectorDefMetadata);
    free(dataCopy);
    free(defaultDataCopy);
    return (ButtonVectorDef*)res;
}

ButtonVectorDef *DeserializeButtonVectorDef(TxtNode* root)
{
    return (ButtonVectorDef*)Deserialize(root, &gButtonVectorDefMetadata);
}

uint8_t *SerializeButtonVectorDef(ButtonVectorDef *val, size_t *dataLenOut)
{
    return Serialize((const uint8_t*)val, &gButtonVectorDefMetadata, dataLenOut);
}

void FreeButtonVectorDef(ButtonVectorDef *val)
{
    FreeStruct((uint8_t*)val, &gButtonVectorDefMetadata);
}
