// DON'T EDIT MANUALLY !!!!
// auto-generated by scripts/gen_settings.py !!!!

#include "BaseUtil.h"
#include "Settings.h"
#include "SettingsSumatra.h"

using namespace settings;

FieldMetadata gForwardSearchSettingsFieldMetadata[] = {
    { TYPE_I32, offsetof(ForwardSearchSettings, highlightOffset), NULL },
    { TYPE_I32, offsetof(ForwardSearchSettings, highlightWidth), NULL },
    { TYPE_I32, offsetof(ForwardSearchSettings, highlightPermanent), NULL },
    { TYPE_U32, offsetof(ForwardSearchSettings, highlightColor), NULL },
    { TYPE_BOOL, offsetof(ForwardSearchSettings, enableTeXEnhancements), NULL },
};

StructMetadata gForwardSearchSettingsMetadata = { sizeof(ForwardSearchSettings), 5, &gForwardSearchSettingsFieldMetadata[0] };

FieldMetadata gPaddingSettingsFieldMetadata[] = {
    { TYPE_U16, offsetof(PaddingSettings, top), NULL },
    { TYPE_U16, offsetof(PaddingSettings, bottom), NULL },
    { TYPE_U16, offsetof(PaddingSettings, left), NULL },
    { TYPE_U16, offsetof(PaddingSettings, right), NULL },
    { TYPE_U16, offsetof(PaddingSettings, spaceX), NULL },
    { TYPE_U16, offsetof(PaddingSettings, spaceY), NULL },
};

StructMetadata gPaddingSettingsMetadata = { sizeof(PaddingSettings), 6, &gPaddingSettingsFieldMetadata[0] };

FieldMetadata gAdvancedSettingsFieldMetadata[] = {
    { TYPE_BOOL, offsetof(AdvancedSettings, traditionalEbookUI), NULL },
    { TYPE_BOOL, offsetof(AdvancedSettings, escToExit), NULL },
    { TYPE_U32, offsetof(AdvancedSettings, textColor), NULL },
    { TYPE_U32, offsetof(AdvancedSettings, pageColor), NULL },
    { TYPE_U32, offsetof(AdvancedSettings, mainWindowBackground), NULL },
    { TYPE_STRUCT_PTR, offsetof(AdvancedSettings, pagePadding), &gPaddingSettingsMetadata },
    { TYPE_STRUCT_PTR, offsetof(AdvancedSettings, forwardSearch), &gForwardSearchSettingsMetadata },
    { TYPE_STR, offsetof(AdvancedSettings, s), NULL },
    { TYPE_FLOAT, offsetof(AdvancedSettings, defaultZoom), NULL },
    { TYPE_WSTR, offsetof(AdvancedSettings, ws), NULL },
};

StructMetadata gAdvancedSettingsMetadata = { sizeof(AdvancedSettings), 10, &gAdvancedSettingsFieldMetadata[0] };

static const uint8_t gAdvancedSettingsDefault[] = {
    0x54, 0x74, 0x65, 0x53, // magic id '1399157844'
    0x00, 0x00, 0x03, 0x02, // version 2.3
    0x24, 0x00, 0x00, 0x00, // top-level struct offset 0x24

    // offset: 0xc StructVal_0 ForwardSearchSettings
    0x54, 0x74, 0x65, 0x53, // magic id '1399157844'
    0x05, // 5 fields
    0x00, // int32_t highlightOffset = 0x0
    0x1e, // int32_t highlightWidth = 0xf
    0x00, // int32_t highlightPermanent = 0x0
    0xfd, 0x65, 0x81, 0xff, // uint32_t highlightColor = 0x6581ff
    0x00, // bool enableTeXEnhancements = 0x0

    // offset: 0x19 StructVal_1 PaddingSettings
    0x54, 0x74, 0x65, 0x53, // magic id '1399157844'
    0x06, // 6 fields
    0x02, // uint16_t top = 0x2
    0x02, // uint16_t bottom = 0x2
    0x04, // uint16_t left = 0x4
    0x04, // uint16_t right = 0x4
    0x04, // uint16_t spaceX = 0x4
    0x04, // uint16_t spaceY = 0x4

    // offset: 0x24 StructVal_2 AdvancedSettings
    0x54, 0x74, 0x65, 0x53, // magic id '1399157844'
    0x0a, // 10 fields
    0x01, // bool traditionalEbookUI = 0x1
    0x00, // bool escToExit = 0x0
    0x00, // uint32_t textColor = 0x0
    0xfd, 0xff, 0xff, 0xff, // uint32_t pageColor = 0xffffff
    0xfd, 0xff, 0xf2, 0x00, // uint32_t mainWindowBackground = 0xfff200
    0x19, // PaddingSettings * pagePadding = StructVal_1
    0x0c, // ForwardSearchSettings * forwardSearch = StructVal_0
    0x06, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x00, // const char * s = "Hello"
    0x03, 0x2d, 0x31, 0x00, // float defaultZoom = "-1"
    0x0e, 0x41, 0x20, 0x77, 0x69, 0x64, 0x65, 0x20, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x00, // const WCHAR * ws = "A wide string"
};

AdvancedSettings *DeserializeAdvancedSettings(const uint8_t *data, int dataLen, bool *usedDefaultOut)
{
    void *res = NULL;
    res = Deserialize(data, dataLen, AdvancedSettingsVersion, &gAdvancedSettingsMetadata);
    if (res) {
        *usedDefaultOut = false;
        return (AdvancedSettings*)res;
    }
    res = Deserialize(&gAdvancedSettingsDefault[0], sizeof(gAdvancedSettingsDefault), AdvancedSettingsVersion, &gAdvancedSettingsMetadata);
    CrashAlwaysIf(!res);
    *usedDefaultOut = true;
    return (AdvancedSettings*)res;
}

uint8_t *SerializeAdvancedSettings(AdvancedSettings *val, int *dataLenOut)
{
    return Serialize((const uint8_t*)val, AdvancedSettingsVersion, &gAdvancedSettingsMetadata, dataLenOut);
}

void FreeAdvancedSettings(AdvancedSettings *val)
{
    FreeStruct((uint8_t*)val, &gAdvancedSettingsMetadata);
}


